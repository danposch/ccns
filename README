=============================================================================
 
 Copyright (c) 2013 Alpen-Adria Universit√§t Klagenfurt	

 Created on: Jun 06, 2013
 Authors:  Daniel Posch <daniel.posch@itec.uni-klu.ac.at>
           Stefan Lederer <stefan.lederer@itec.uni-klu.ac.at>
           Benjamin Rainer <benjamin.rainer@itec.uni-klu.ac.at>
           Christopher Mueller <christopher.mueller@itec.uni-klu.ac.at>


 Please consider the LICENSE
=============================================================================


=============================================================================
Content-Centric Networking Skeleton - Implementation
=============================================================================

PARC's concept of Content-Centric Networking(CCN) is a promising idea. Still 
there are many challenges to face in this research area and PARC has done a
great job in this field with providing CCNx. However, we think that the research
community needs a more flexible and easily extensible implementation of the CCN
protocol. Therefore, we provide the Content-Centric Networking Skeleton(CCNs),
which is an object oriented implementation of CCN. This implementation should 
enable the research community to easily integrate new ideas into the current 
framework and evaluate them.


=============================================================================
Requirements
=============================================================================
* Ubuntu 12.04
* Install qmake

=============================================================================
Fetch the code
=============================================================================
* Install git:
    apt-get install git-core

* Fetch the Repository from git:
    git clone https://github.com/danposch/ccns.git


=============================================================================
Build the source code
=============================================================================
* cd ccns/
* sudo ./bootstrap.sh (must be executed as root to install third party libs)
	* qmake                      (to build the DEBUG version)
	or
	* qmake CONFIG+=ccns_release (to build the release version)
* make


=============================================================================
Clean the workspace
=============================================================================
* make clean
or
* make distclean (required to switch from DEBUG to RELEASE or vice versa)

=============================================================================
Generate the documentation
=============================================================================
* install Doxygen: 
    apt-get install doxygen

* cd ccns/
* doxygen ccns.doxygen
* documentation appears in ccns/doc/

=============================================================================
Third-party Software
=============================================================================
This project includes the following software of third-parties:

* Boost      http://www.boost.org/
* Crypto++   http://www.cryptopp.com/
* LibXml2    http://www.xmlsoft.org/
